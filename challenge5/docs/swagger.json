{
    "openapi": "3.0.0",
    "info": {
      "title": "Car Management API",
      "description": "Dokumentasi untuk challenge chapter 5 Binar Academy!",
      "version": "1.0.0"
    },
    "tags": [
      {
        "name": "Superadmin",
        "description": "API for Superadmin"
      },
      {
        "name": "Admin",
        "description": "API for Admin"
      },
      {
        "name": "Users",
        "description": "API for User"
      },
      {
        "name": "Cars",
        "description": "API for Car"
      }
    ],
    "servers": [
      {
        "url": "http://localhost:3000/api/v1",
        "description": "Local Server"
      }
    ],
    "paths": {
      "/auth/superadmin/login": {
        "post": {
          "tags": ["Superadmin"],
          "summary": "Login for Superadmin",
          "description": "this is the API for Superadmin login",
          "requestBody": {
            "description": "This is the request body for successful login!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "superadmin@mail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "superadmin123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login success!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJEaWthIiwicm9sZSI6IlN1cGVyYWRtaW4iLCJlbWFpbCI6InN1cGVyYWRtaW5AbWFpbC5jb20iLCJpYXQiOjE2OTc5ODYxNjN9.UUB2X-zRo_rGxa7SrdFrxluoHcQduTUTdnBcTbXID9Q"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Login failed!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Wrong password or user doesn't exist!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/auth/admin/login": {
        "post": {
          "tags": ["Admin"],
          "summary": "Login for Admin",
          "description": "this is the API for Admin login!",
          "requestBody": {
            "description": "This is the request body for successful login!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "superadmin@mail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "superadmin123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login success!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJEaWtvIiwicm9sZSI6Ik1lbWJlciIsImVtYWlsIjoiZGlrbzIzNWRzZDNAbWFpbC5jb20iLCJpYXQiOjE2OTc5ODY0Njl9.VyPbZHSo1tEOhDLhRuq6fOQpaVzPRJ6ZJxrbwzX-Blk"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Login failed!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "user"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/auth/admin/register": {
        "post": {
          "tags": ["Admin"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Register for Admin",
          "description": "this is the API for Admin register!",
          "requestBody": {
            "description": "This is the request body for successful register!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "rizky"
                    },
                    "password": {
                      "type": "string",
                      "example": "rizky123"
                    },
                    "email": {
                      "type": "string",
                      "example": "rizky@mail.com"
                    },
                    "confirmPassword": {
                      "type": "string",
                      "example": "rizky123"
                    },
                    "age": {
                      "type": "integer",
                      "example": 20
                    },
                    "address": {
                      "type": "string",
                      "example": "Yogya"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Register Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "lorem"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Login failed!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Wrong password or user doesn't exist!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/auth/me": {
        "get": {
          "tags": ["Users"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Check current user",
          "responses": {
            "200": {
              "description": "this is the API for checking current user!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "superadmin123"
                              },
                              "age": {
                                "type": "integer",
                                "example": 21
                              },
                              "role": {
                                "type": "string",
                                "example": "superadmin"
                              },
                              "address": {
                                "type": "string",
                                "example": "yogya"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-22T14:33:15.310Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-22T14:33:15.310Z"
                              },
                              "Auth": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "email": {
                                    "type": "string",
                                    "example": "superadmin@mail.com"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Invalid Token!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Invalid Token!"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Invalid Token!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        },
      "/auth/member/login": {
        "post": {
          "tags": ["Users"],
          "summary": "Login for Member",
          "description": "this is the API for Member login!",
          "requestBody": {
            "description": "This is the request body for successful login!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "rizky@mail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "rizkyganteng"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login success!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "lorem"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Login failed!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Wrong password or user doesn't exist!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/auth/member/register": {
        "post": {
          "tags": ["Users"],
          "summary": "Register for Member",
          "description": "this is the API for Member register!",
          "requestBody": {
            "description": "This is the request body for successful register!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "rizky"
                    },
                    "password": {
                      "type": "string",
                      "example": "rizkyganteng"
                    },
                    "email": {
                      "type": "string",
                      "example": "rizky@mail.com"
                    },
                    "confirmPassword": {
                      "type": "string",
                      "example": "rizkyganteng"
                    },
                    "age": {
                      "type": "integer",
                      "example": 21
                    },
                    "address": {
                      "type": "string",
                      "example": "Yogya"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Register Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "lorem"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Login failed!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Wrong password or user doesn't exist!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users": {
        "get": {
          "tags": ["Users"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Find All Users",
          "description": "this is the API for get all users data!",
          "responses": {
            "200": {
              "description": "Success: List of users retrieved",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "rizky"
                            },
                            "age": {
                              "type": "integer",
                              "example": 30
                            },
                            "role": {
                              "type": "string",
                              "example": "user"
                            },
                            "address": {
                              "type": "string",
                              "example": "city"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2023-10-20T16:10:41.263Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2023-10-20T16:10:41.263Z"
                            },
                            "Auth": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "email": {
                                  "type": "string",
                                  "example": "rizky@gmail.com"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Unauthorized"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Unauthorized"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },      
      "/users/{id}": {
        "get": {
          "tags": ["Users"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Find User by ID",
          "description": "this is the API for get user data by id!",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "ID of the user to retrieve"
            }
          ],
          "responses": {
            "200": {
              "description": "Success: User retrieved by ID",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "rizky"
                              },
                              "age": {
                                "type": "integer",
                                "example": 21
                              },
                              "role": {
                                "type": "string",
                                "example": "superadmin"
                              },
                              "address": {
                                "type": "string",
                                "example": "Yogya"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-22T14:33:15.540Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-22T14:33:15.540Z"
                              },
                              "Auth": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "email": {
                                    "type": "string",
                                    "example": "rizky@mail.com"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Unauthorized"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Unauthorized"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/member/{id}": {
        "patch": {
          "tags": ["Users"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Update User by ID",
          "description": "this is the API for update user data by id!",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "ID of the user to update"
            }
          ],
          "requestBody": {
            "description": "Updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "role": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "Auth": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success: User updated by ID",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User updated successfully"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Unauthorized"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Unauthorized"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["Users"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Delete User by ID",
          "description": "this is the API for delete user data by id!",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "ID of the user to delete"
            }
          ],
          "responses": {
            "200": {
              "description": "Success: User deleted by ID",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User deleted successfully"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Unauthorized"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Unauthorized"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/admin/{id}": {
        "patch": {
          "tags": ["Users"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Update Admin by ID",
          "description": "this is the API for update user data by id!",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "ID of the user to update"
            }
          ],
          "requestBody": {
            "description": "Updated user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "role": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "Auth": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success: User updated by ID",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User updated successfully"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Unauthorized"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Unauthorized"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["Users"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Delete Member by ID",
          "description": "this is the API for delete user data by id!",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "ID of the user to delete"
            }
          ],
          "responses": {
            "200": {
              "description": "Success: User deleted by ID",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User deleted successfully"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Unauthorized"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Unauthorized"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "User not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },        
      "/cars": {
        "post": {
          "tags": ["Cars"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Create new Car",
          "description": "this is the API for create new car!",
          "requestBody": {
            "description": "This is the request body for successful create car!",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string",
                      "example": "small"
                    },
                    "price": {
                      "type": "integer",
                      "example": 150000
                    },
                    "image": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "lorem"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Failed",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error message!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "get": {
            "tags": ["Cars"],
            "security": [
              {
                "bearerToken": []
              }
            ],
            "summary": "Get All Cars",
            "description": "this is the API for get all cars data!",
            "responses": {
              "200": {
                "description": "Success: All cars retrieved",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Car Name"
                          },
                          "category": {
                            "type": "string",
                            "example": "Small"
                          },
                          "price": {
                            "type": "integer",
                            "example": 150000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        }
      },
      "/cars/{id}": {
        "get": {
          "tags": ["Cars"],
          "security": [
            {
              "bearerToken": []
            }
          ],
          "summary": "Find Car by ID",
          "description": "this is the API for get car data by id!",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "description": "ID of the car to retrieve"
            }
          ],
          "responses": {
            "200": {
              "description": "Success: Car retrieved by ID",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Car Name"
                      },
                      "category": {
                        "type": "string",
                        "example": "Small"
                      },
                      "price": {
                        "type": "integer",
                        "example": 150000
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Car not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Failed"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Car not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
            "tags": ["Cars"],
            "security": [
              {
                "bearerToken": []
              }
            ],
            "summary": "Update Car by ID",
            "description": "this is the API for update car data by id!",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "ID of the car to update"
              }
            ],
            "requestBody": {
              "description": "Updated car data in multipart/form-data format",
              "content": {
                "multipart/form-data": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string"
                      },
                      "price": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "image": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success: Car updated by ID",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "Success"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Car updated successfully"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "description": "Car not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "Failed"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Car not found"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },          
        "delete": {
            "tags": ["Cars"],
            "security": [
                {
                  "bearerToken": []
                }
            ],
            "summary": "Delete Car by ID",
            "description": "this is the API for delete car data by id!",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "ID of the car to delete"
              }
            ],
            "responses": {
              "200": {
                "description": "Success: Car deleted by ID",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Car deleted successfully"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "description": "Car not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "Failed"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Car not found"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      }

    },
    "components": {
      "securitySchemes": {
        "bearerToken": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    }
  }